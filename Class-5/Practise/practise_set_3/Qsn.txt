 A Library Management System (LMS) for a university library. The LMS should handle various types of library items such as books, magazines, and digital media.

    Abstraction & Inheritance:

        Create an abstract class called LibraryItem with properties such as title, author, itemID, isAvailable, and methods like checkOut() and returnItem(). This class should serve as the base class for all library items.

        Create subclasses for specific types of library items like Book, Magazine, and DigitalMedia, each inheriting from LibraryItem. These subclasses should have additional properties and methods specific to their types. For example, a Book class might have an ISBN property, and a Magazine class might have an issueNumber property.

    Encapsulation:
        Ensure that the properties of LibraryItem and its subclasses are properly encapsulated, with appropriate getters and setters where necessary to control access to the data.

    Polymorphism:

        Implement a method called displayInfo() in each subclass that provides detailed information about the item. The exact information displayed should depend on the type of item. For example, a book's displayInfo() method might include information like the title, author, ISBN, and availability.

        Create a LibraryCatalog class that manages a collection of library items. It should have methods for adding items, removing items, and searching for items. The search method should be able to search for items by title, author, or other relevant criteria.